package com.atguigu.java;

public class ArrayTest {

	public static void main(String[] args) {

		
		//String[] arr = new String[]{"JJ", "DD", "MM", "BB", "GG", "AA"};
		
		//数组的反转,反转操作
		/*
		//注：不能加=
		for(int i = 0;i<arr.length / 2;i++){
			String temp = arr[i];
			arr[i] = arr[arr.length - i -1];
			arr[arr.length - i -1] = temp;
		}
		*/
		
		/*
		//方法二
		for(int i =0,j = arr.length - 1;i < j;i++,j--){
			//j = arr.length-1 是末尾元素的地址下标
			String temp = arr[i];
			arr[i] = arr[j];
			arr[j] = temp;
		}
		*/
		
		/*
		//遍历
		for(int i =0;i < arr.length;i++){
			System.out.print(arr[i] + "\t");
		}
		*/
		
		//查找（或者搜索）
		//线性查找
		
		/*
		String dest = "BB";
		
		boolean isFlag = true;
		
		for(int i = 0;i < arr.length;i++){
			
			if(dest.equals(arr[i])){
				//指示其他某个对象是否与此对象“相等”
				System.out.println("找到了指定的元素，位置为： " +i);
				isFlag = false;
				break;
			}
		}
		if(isFlag){
			System.out.println("很遗憾，没有找到");
		}
		*/
		
		
		/*
		//二分法查找
		//前提：所要查找的数组必须有序
		int[] arr2 = new int[]{66,78,99,45,38,48,64,51,-987,-645,-22,654,984};
		
		int dest = 78;
		int head = 0; //初始的首索引
		int end = arr2.length -1; //初始的末索引
		boolean isFlag = true;
		
		//将数组的元素排序
		//冒泡排序
		for(int i = 0;i < arr2.length - 1;i++){
			for(int j = 0;j < arr2.length - 1 - i;j++){
			if(arr2[j] > arr2[j + 1]){
				int temp = arr2[j];
				arr2[j] = arr2[j + 1];
				arr2[j + 1] = temp;
			}
		    }
		}
		
		for(int j = 0;j < arr2.length;j++){
			System.out.print(arr2[j] + "\t");
		}

		
		while(head <= end){
			
			int middle = (head + end) / 2;
			
			if( dest == arr2[middle] ){
				System.out.println("找到了，这个元素的位置是： " + middle);
				isFlag = false;
				break;
			}else if(arr2[middle] > dest){
				end = middle - 1;
			}else{
				head = middle + 1;
			}
		}
		
		if(isFlag){
			System.out.println("很遗憾，没有找到");
		}
		*/
		
		
		

		
	}

}
