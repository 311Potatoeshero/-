package com.atguigu.exer1;

public class TriAngleTest {

	public static void main(String[] args) {
		
		TriAngle t1 = new TriAngle();
		t1.setBase(2.0);
		t1.setHeight(2.4);
//		t1.base = 2.5;
//		t1.height = 4.3;
		System.out.println("base: " + t1.getBase() + ",height: " + t1.getHeight());
		
		TriAngle t2 = new TriAngle();
		System.out.println("base: " + t2.getBase() + ",height: " + t2.getHeight());
		
	}

}


package com.atguigu.exer1;
/*
 *  总结： 属性赋值的先后过程
 *  
 *  ① 默认初始化
 *  ② 显示初始化
 *  ③ 构造器中赋值
 *  ④ 通过“对象，方法” 或“对象，属性”的方式赋值
 *  
 *  以上操作的先后顺序：① - ② - ③ - ④
 */

public class UserTest {

	public static void main(String[] args) {
		
		User u = new User();
		
		System.out.println(u.age);
		
		User u1 = new User(2);
		
		u1.setAge(3);
		System.out.println(u1.age);

	}

}

class User{
	String name;
	int age;
	
	public User(){
		
	}
	
	public User(int a){
		age = a;
	}
	
	public void setAge(int a){
		age = a;
	}
}


package com.atguigu.exer1;
/*
 *  JavaBean是一种Java语言写成的可重用组件。
 *   所谓javaBean,是指符合如下标准的Java类
 *    》类是公共的
 *    》有一个无参的公共的构造器
 *    》有属性，且有对应的get、set的方法
 */

public class Customer {

	public static void main(String[] args) {

	}
	private int id;
	private String name;
	
	
	// 空参的构造器
	public Customer(){
		
	}
	
	public void setId(int i){
		id = i;
	}
	
	public int getId(){
		return id;
	}
	
	public void setName(String n){
		name = n;
	}
	
	public String getName(){
		return name;
	}

}

package com.atguigu.java2;
/*
 *  this关键字的使用
 *  1.this可以用来修饰：属性、方法、构造器
 *  2.this修饰属性和方法：
 *      this理解为： 当前对象
 *      在类的方法中，我们可以使用”this.属性”或“this.方法”的方式，调用当前对象属性或方法
 *      但是通常情况下，我们都选择省略“this.”
 *      如果方法的形参和类的属性重名时，需使用“this.变量”
 *  3.this理解为:当前对象 或 当前正在创建的对象
 *  
 *  4.this调用的构造器
 *    ① 在类的构造器中，可以显式的使用“this(形参列表)”方式,调用本类中指定的其他构造器
 *    ② 构造器中不能通过“this(形参列表)”方式调用自己
 *    ③ 如果一个类中有n个构造器，最多有n - 1构造器中使用了“this（形参列表）”
 *    ④ 规定： “this（形参列表）”必须声明在当前构造器的首行
 *    ⑤ 构造器内部最多只能声明一个this（形参列表），用来调用其他构造器
 *      
 */

public class PersonTest {

	public static void main(String[] args){
		Person p = new Person();
		
		p.setAge(1);
		System.out.println(p.getAge());
		
		p.eat();
		
		Person p2 = new Person("Jerry",20);
		System.out.println(p2.getAge());
	}
}

class Person{
	private String name;
	private int age;
	
	public void setName(String name){
		this.name = name;
	}
	
	public String getName(){
		return name;
	}
	
	public void setAge(int age){
		this.age = age;
	}
	
	public int getAge(){
		return age;
	}
	
	//方法
	public void eat(){
		System.out.println("吃饭");
		this.study();
	}
	
	public void study(){
		System.out.println("学习");
	}
	
	//构造器
	public Person(){
		String info = "this调用";
		System.out.println(info);
	}
	
	public Person(String name){
		this();
		this.name = name;
	}
	
	public Person(int age){
		this();
		this.age = age;
	}
	
	public Person(String name,int age){
		this(age);
		this.name = name;
	}
}


package comatguigu.exer2;

public class Boy {
	
	private String name;
	private int age;
	
	public Boy(){
		
	}
	
	public Boy(String name){
		this.name = name;
	}
	
	public Boy(String name,int age){
		this.name = name;
		this.age = age;
	}
	
	public String getName(){
		return name;
	}
	
	public void setName(String name){
		this.name = name;
	}
	
	public int getAge(){
		return age;
	}
	
	public void setAge(int age){
		this.age = age;
	}

	public void marry(Girl girl){
		System.out.println("我想娶  " + girl.getName());
	}
	
	// 年龄的设置
	public void shout(){
		if(this.age >= 22){
			System.out.println("你可以去合法登记结婚");
		}else{
			System.out.println("多谈谈恋爱");
		}
	}

}


package comatguigu.exer2;

public class Girl {

	public static void main(String[] args) {
		

	}
	
	private String name;
	private int age;
	
	public Girl(){
		
	}
	
	public  Girl(String name,int age){
		this.name = name;
		this.age = age;
	}
	
	public String getName(){
		return name;
	}
	
	public void setName(String name){
		this.name = name;
	}
	
	public void marry(Boy boy){
		System.out.println("我想嫁给 " + boy.getName());
		boy.marry(this);
	}
	
	/**
	 * 比较两个对象的大小
	 * @param girl
	 * @return 正数，当前对象大； 负数，当前对象小； 0：当前对象与形参对象相等
	 */
    public int compare(Girl girl){
    	if(this.age > girl.age){
    		return 1;
    	}else if(this.age < girl.age){
    		return -1;
    	}else{
    		return 0;
    	}
    }

}


package comatguigu.exer2;

public class BoyGirlTest {

	public static void main(String[] args){
		
		Boy boy = new Boy("罗密欧", 21);
		boy.shout();
		
		Girl girl = new Girl("朱丽叶", 19);
		girl.marry(boy);
		
		Girl girl1 = new Girl("祝英台", 21);
		int compare = girl.compare(girl1);
		if(compare > 0){
			System.out.println(girl.getName() + "大");
		}else if(compare < 0){
			System.out.println(girl.getName() + "小");
		}else{
			System.out.println("一样大");
		}
		
	}
}


package com.atguigu.exer3;

public class Account {

	private int id; //账号
	private double balance; //余额
	private double annualInterestRate; //年利率
	
	// 创建构造器
	public Account(int id, double balance,double annualInterestRate){
		this.id = id;
		this.balance = balance;
		this.annualInterestRate = annualInterestRate;
	}
	
	// 构造方法
	public int getId(){
		return id;
	}
	
	public void setId(int id){
		this.id = id;
	}
	
	public double getBanlance(){
		return balance;
	}
	
	public void setBalance(double balance){
		this.balance = balance;
	}
	
	public double getAnnualInterestRate(){
		return annualInterestRate;
	}
	
	public void setAnnualInterestRate(double annualInterestRate){
		this.annualInterestRate = annualInterestRate;
	}
	 
	//在提款方法中，判断用户余额是否能够满足提款数额的要求
	public void withdraw(double amount){ //取钱
		if(balance <amount){
			System.out.println("余额不足，取款失败");
			return;
		}
		balance -= amount;
		System.out.println("成功取出 " + amount);
	}
	
	public void deposit(double amount){ //存钱
		if(amount > 0){
			balance += amount;
			System.out.println("成功存入： " + amount);
		}
	}
	
}


package com.atguigu.exer3;

public class Customer {

	private String firstName;
	private String lastName;
	private Account account; //Account 自定义类
	
	public Customer(String f,String l){
		this.firstName = f;
		this.lastName = l;
	}
	
	public Account getAccount(){
		return account;
	}
	
	public void setAccount(Account account){
		this.account = account;
	}
	
	public String getFirstName(){
		return firstName;
	}
	

	public String getLastName(){
		return lastName;
	}
	
}


package com.atguigu.exer3;

public class CustomerTest {

	public static void main(String[] args) {
		Customer cust = new Customer("Jane","Smith");
		
		Account acct = new Account(1000, 2000, 0.0123);
		
		cust.setAccount(acct); //让两者关联
		
		cust.getAccount().deposit(100); //连续调用 获取账户-存取金额
		cust.getAccount().withdraw(960);
		cust.getAccount().withdraw(2000);
		
		System.out.println("Customer: " + cust.getLastName() + "," + cust.getFirstName() + "] has a account: id is " 
		+ cust.getAccount().getId() + ",annualInterestRate is " + cust.getAccount().getAnnualInterestRate() * 100 + "% , balance is " + cust.getAccount().getBanlance());

	}

}

