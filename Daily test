//#include <stdio.h>
//#include <string.h>
//int main()
//{
//	char arr1[] = "bit";
//	char arr2[20] = "########";
//	strcpy_s(arr2, arr1); //strcpy字符串拷贝
//	printf("%s\n", arr2);
//	return 0;
//}
//#include <stdio.h>
//#include <string.h>
//int main()
//{
//	char arr[] = "Hello World!";
//	memset(arr, '*', 5); //内存设置，'*'里面放到是ASRII的值
//	printf("%s\n", arr);
//	return 0;
//}
//#include <stdio.h>
//int main()
//{
//	int a = 10;
//	int* pa = &a;   //指针变量pa指向变量a的地址
//	*pa = 20;       //解引用操作
//	printf("%d\n", a);
//	return 0;
//}
//#include <stdio.h>
//void rev(int* pa, int* pb)
//{
//	int tum = 0;
//	tum =*pa ;
//	*pa = *pb;
//	 *pb=tum ;
//}
//int main()
//{
//	int a = 10;
//	int b = 20;
//    rev(&a,&b);  //地址函数
//	printf("a=%d	b=%d", a, b);
//	return 0;
//}
//#include <stdio.h>
//#include <math.h>
//int is_prime(int n)
//{
//	int j = 0;
//	for (j = 2; j <= sqrt(n); j++)
//	{
//		if (n % j == 0) 
//		{
//			return 0;
//		}
//		return 1;
//	}
//}
//int main()
//{
//	int i = 0;
//	for (i = 100; i <= 200; i++)
//	{
//		if (is_prime(i) == 1)
//			printf("%d	",i);
//	}
//	return 0;
//}
//#include <stdio.h>
//int is_leap_year(int y)
//{
//	if ((y % 4 == 0) &&(y % 100 != 0) || (y % 400 == 0))
//	{
//		return 1;
//	}
//	else return 0;
//}
//int main()
//{
//	int year = 0;
//	for (year = 1000; year <= 2000; year++)
//	{
//		if (is_leap_year(year) == 1)
//		{
//			printf("%d ", year);
//		}
//	}
//	return 0;
//}
//#include <stdio.h>
//int main()
//{
//	int i = 0;
//	for (i = 1000; i <= 2000; i++)
//	{
//		if ((i % 4 == 0) && (i % 100 != 0) || (i % 400 == 0))
//		{
//			printf("%d ",i);
//		}
//	}
//	return 0;
//}
//#include <stdio.h>
//int binary_search(int arr[],int k,int sz)
//{
//	//算法实现
//	int left = 0;
//	int right = sz - 1;
//	while (left <= right)
//	{
//		int mid = (left + right) / 2; //中间元素下标
//		if (arr[mid] < k)
//		{
//			left = mid + 1;
//		}
//		else if (arr[mid] > k)
//		{
//			right = mid - 1;
//		}
//		else
//		{ 
//			return mid;
//        }
//	}
//	return -1;
//}
//int main()
//{
//	//二分查找
//	//在一个数组中查找指定数
//	//找到了返回这个数的下标，找不到返回-1
//	int arr[] = { 1,2,3,4,5,6,7,8,9,10 };
//	int k = 6;
//	int sz = sizeof(arr) / sizeof(arr[0]); //计算元素个数
//	int ret = binary_search(arr, k,sz);
//	if (arr[k] = -1)
//	{
//		printf("找不到指定数字");
//	}
//	else
//	{
//		printf("找到了，这个数字是：%d\n", sz);
//	}
//	return 0;
//}
//#include <stdio.h>
//int Add(int *p)
//{
//	(*p)++;//++的优先级高于*，加括号 
//	return 0;
//}
//int main()
//{
//	int num = 0;
//	Add(&num);
//	printf("%d\n", num);
//	Add(&num);
//	printf("%d\n", num);
//	Add(&num);
//	printf("%d\n", num);
//	return 0;
//}
//#include <stdio.h>   //函数的嵌套
//void new_line()
//{
//	printf("hehe");
//}
//void three_line()
//{
//	int i = 0;
//	for (i = 1; i <= 3; i++)
//	{
//		new_line();
//	}
//}
//int main()
//{
//	three_line();
//	return 0;
//}
//#include <stdio.h>   //链式访问
//#include <string.h>
//int main()
//{
//	/*int len = 0;
//    len = strlen("abc");
//	printf("%d\n", len);
//	printf("%d\n", strlen("abc"));*/
//	printf("%d", printf("%d", printf("%d", 43)));
//	return 0;
//}
//#include "Add.h"
//#include <stdio.h>
//int main() 
//{
//	int b = 20;
//	int  a = 10;
//	int c=Add(a, b);
//	printf("%d\n", c);
//	return 0;
//}
