//#include <stdio.h>
//#include <string.h>
//#include <assert.h>
////arr1拷贝到arr2中
//void* my_memcpy(void* dest,const void* src,size_t count)
//{
//	char* ret = dest;
//	assert(dest != NULL);
//	assert(src != NULL);
//	while (count--)
//	{
//		*(char*)dest = *(char*)src;
//		++(char*)dest;
//		++(char*)src;
//	}
//	return ret;
//}
//int main()
//{
//	int arr1[] = { 1,2,3,4,5 };
//	int arr2[10] = { 0 };
//	my_memcpy(arr2,arr1,sizeof(arr1));
//	//第三个参数是拷贝字符的个数
//	printf("%c\n", arr2);
//	return 0;
//}

//#include <stdio.h>
////将大写转换为小写输出
//int main()
//{
//	char ch;
//	scanf_s("%c", &ch);
//	ch = (ch >= 'A'&&ch <= 'Z') ? (ch + 32) : ch;
//	printf("%c\n", ch);
//	return 0;
//}

//#include  <stdio.h>
//double fun(int  n)
//{
//	int  i;    
//	double  s, t;
//	s = 0;
//	for (i = 1; i <= n; i++)
//	{
//		t = 2.0*i;
//		s = s + (2.0*i - 1)*(2.0*i + 1) / (t*t);
//	}
//	return  s;
//}
//main()
//{
//	int  n = -1;
//	while (n < 0)
//	{
//		printf("Please input(n>0): "); scanf("%d", &n);
//	}
//	printf("\nThe result is: %f\n", fun(n));
//}

#include  <stdio.h>
double fun(int  n)
{
	int  i, k;   
	double  s, t;
	s = 0;
	k = 1;
	for (i = 1; i <= n; i++) {
		t = 2;
		s = s + k * (2 * i - 1)*(2 * i + 1) / (t*t);
		k = k * (-1);
	}
	return  s;
}
main()
{
	int  n = -1;
	while (n < 0)
	{
		printf("Please input(n>0): ");  scanf("%d", &n);
	}
	printf("\nThe result is: %f\n", fun(n));
}
