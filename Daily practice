//#include   <stdio.h>
////筛选法找出，小于等于n的素数
//int fun(int  n)
//{
//	int  a[10000], i, j, count = 0;
//	for (i = 2; i <= n; i++)  a[i] = i;
//	i = 2;
//	while (i < n) {
//		for (j = a[i] * 2; j <= n; j += a[i])
//			a[j] = 0;
//		i++;
//		while ( a[i] / i == 0)
//			i++;
//	}
//	printf("\nThe prime number between 2 to %d\n", n);
//	for (i = 2; i <= n; i++)
//		if (a[i] != 0)
//		{
//			count++;    printf(count % 15 ? "%5d" : "\n%5d", a[i]);
//		}
//	return  count;
//}
//int main()
//{
//	int  n = 20, r;
//	r = fun(n);
//	printf("\nThe number of prime is  :  %d\n", r);
//}

//#include    <stdio.h>
////求abc的中间值
//int fun(int  a, int  b, int  c)
//{
//	int  t;
//	t = (a > b) ? (b > c ? b : (a > c ? c : a)) : ((a > c) ? a : a((b > c) ? c : b));
//	return  t;
//}
//int main()
//{
//	int  a1 = 3, a2 = 5, a3 = 4, r;
//	r = fun(a1, a2, a3);
//	printf("\nThe middle number is  :  %d\n", r);
//}

//#include  <stdio.h>
////输出和为15的数
//int fun(int  x)
//{
//	int  n, s1, s2, s3, t;
//	n = 0;
//	t = 100;
//	while (t <= x)
//	{
//		s1 = t % 10;  s2 = (t / 10) % 10;  s3 = t / 100;
//		if (s1 + s2 + s3 == 15)
//		{
//			printf("%d ", t);
//			n++;
//		}
//		t++;
//	}
//	return n;
//}
//int main()
//{
//	int  x = -1;
//	while (x > 999 || x < 0)
//	{
//		printf("Please input(0<x<=999): ");  
//		scanf_s("%d", &x);
//	}
//	printf("\nThe result is: %d\n", fun(x));
//}

//#include <stdio.h>
////将数组a的值赋值给数组b
//void  fun(char  *p, char  *b)
//{
//	int   i, k = 0;
//	while (*p)
//	{
//		i = 1;
//		while (i <= 3 && *p) {
//			b[k] = *p;
//			k++; p++; i++;
//		}
//		if (*p)
//		{
//			b[k++] = ' ';
//		}
//	}
//	b[k] = '\0';
//}
//int main()
//{
//	char  a[80], b[80];
//	printf("Enter a string:      ");  gets(a);
//	printf("The original string: ");  puts(a);
//	fun(a, b);
//	printf("\nThe string after insert space:   ");  puts(b); printf("\n\n");
//}

//#include <stdio.h>
////输入4个数，将该4个数按一位数组的方式输出
//#define    M    4
//void fun(int  *a)
//{
//	int  i, j, k, m;
//	printf("Enter 4 number :  ");
//	for (i = 0; i < M; i++)
//		scanf("%d", &a[i]);
//	printf("\n\nThe result  :\n\n");
//	for (i = M; i > 0; i--)
//	{
//		k = a[M - 1];
//		for (j = M - 1; j > 0; j--)
//			a[j] = a[j - 1];
//		a[0] = k;
//		for (m = 0; m < M; m++) 
//		printf("%d  ", a[m]);
//		printf("\n");
//	}
//}
//int main()
//{
//	int  a[M];
//	fun(a); printf("\n\n");
//}

//#include <stdio.h>
////有三个红球，五个白球和八个黑球
////八个球为一组，每组中可以没有黑球，求组数
//int  fun()
//{
//	int  i, j, k, sum = 0;
//	printf("\nThe result  :\n\n");
//	for (i = 1; i <= 3; i++)
//	{
//		for (j = 1; j <= 5; j++)
//		{
//			k = 8 - i - j;
//			if (k >= 0 && k <= 6)
//			{
//				sum = sum + 1;
//				printf("red:%4d white:%4d black:%4d\n", i, j, k);
//			}
//		}
//	}
//	return  sum;
//}
//main()
//{
//	int  sum;
//	sum = fun();
//	printf("sum =%4d\n\n", sum);
//}

#include <stdio.h>
//求x的y次方，并求出该数的后三位
long  fun(int  x, int  y, long  *p)
{
	int  i;
	long  t = 1;
	for (i = 1; i <= y; i++)
		t = t * x;
	*p = t;
	t = t % 1000;
	return  t;
}
main()
{
	long   t, r;    int  x, y;
	printf("\nInput x and y: "); 
	scanf("%ld%ld", &x, &y);
	t = fun(x, y, &r);
	printf("\n\nx=%d, y=%d, r=%ld, last=%ld\n\n", x, y, r, t);
}
